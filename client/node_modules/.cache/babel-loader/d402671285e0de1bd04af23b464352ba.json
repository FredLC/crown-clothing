{"ast":null,"code":"var _jsxFileName = \"/Users/fredlefevre/Desktop/crown-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const emailSignInStart = this.props.emailSignInStart;\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const googleSignInStart = this.props.googleSignInStart;\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      label: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      label: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/fredlefevre/Desktop/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","constructor","props","handleSubmit","e","preventDefault","state","email","password","handleChange","target","value","name","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {\n    googleSignInStart,\n    emailSignInStart,\n} from '../../redux/user/user.actions';\nimport './sign-in.styles.scss';\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n        };\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const { emailSignInStart } = this.props;\n        const { email, password } = this.state;\n\n        emailSignInStart(email, password);\n    };\n\n    handleChange = (e) => {\n        const { value, name } = e.target;\n\n        this.setState({ [name]: value });\n    };\n\n    render() {\n        const { googleSignInStart } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2 className='title'>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='email'\n                        name='email'\n                        label='email'\n                        value={this.state.email}\n                        handleChange={this.handleChange}\n                        required\n                    />\n\n                    <FormInput\n                        type='password'\n                        name='password'\n                        label='password'\n                        value={this.state.password}\n                        handleChange={this.handleChange}\n                        required\n                    />\n\n                    <div className='buttons'>\n                        <CustomButton type='submit'>Sign In</CustomButton>\n                        <CustomButton\n                            type='button'\n                            onClick={googleSignInStart}\n                            isGoogleSignIn\n                        >\n                            Sign In With Google\n                        </CustomButton>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) =>\n        dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}