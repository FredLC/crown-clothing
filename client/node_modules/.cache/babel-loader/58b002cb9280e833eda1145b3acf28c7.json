{"ast":null,"code":"import _defineProperty from \"/Users/fredlefevre/Desktop/crown-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/fredlefevre/Desktop/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserDocument","getCurrentUser","isUserAuthenticated","userAuth","getSnapshotFromUserAuth","error","userRef","userSnapshot","get","id","data","signOut","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUp","displayName","createUserWithEmailAndPassword","additionalData","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {\n    signInSuccess,\n    signInFailure,\n    signOutSuccess,\n    signOutFailure,\n    signUpSuccess,\n    signUpFailure,\n} from './user.actions';\nimport {\n    auth,\n    googleProvider,\n    createUserDocument,\n    getCurrentUser,\n} from '../../firebase/firebase.utils';\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try {\n        const userRef = yield call(createUserDocument, userAuth);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n        );\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const { user } = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signUp({ payload: { email, password, displayName } }) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(\n            email,\n            password\n        );\n        yield put(signUpSuccess({ user, additionalData: { displayName } }));\n    } catch (error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START);\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n    ]);\n}\n"]},"metadata":{},"sourceType":"module"}