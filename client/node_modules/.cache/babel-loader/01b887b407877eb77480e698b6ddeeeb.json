{"ast":null,"code":"var _jsxFileName = \"/Users/fredlefevre/Desktop/crown-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { auth, createUserDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\nexport class SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const signUpStart = this.props.signUpStart;\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match!\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      });\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"I don't have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Sign Up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/fredlefevre/Desktop/crown-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","Component","connect","FormInput","CustomButton","signUpStart","auth","createUserDocument","SignUp","constructor","handleSubmit","e","preventDefault","props","state","displayName","email","password","confirmPassword","alert","handleChange","target","name","value","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { auth, createUserDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nexport class SignUp extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        };\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        const { signUpStart } = this.props;\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match!\");\n            return;\n        }\n\n        signUpStart({ displayName, email, password });\n    };\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    render() {\n        const { displayName, email, password, confirmPassword } = this.state;\n\n        return (\n            <div className='sign-up'>\n                <h2 className='title'>I don't have an account</h2>\n                <span>Sign Up with your email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                        type='text'\n                        name='displayName'\n                        value={displayName}\n                        onChange={this.handleChange}\n                        label='Display Name'\n                        required\n                    />\n                    <FormInput\n                        type='email'\n                        name='email'\n                        value={email}\n                        onChange={this.handleChange}\n                        label='Email'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={this.handleChange}\n                        label='Password'\n                        required\n                    />\n                    <FormInput\n                        type='password'\n                        name='confirmPassword'\n                        value={confirmPassword}\n                        onChange={this.handleChange}\n                        label='Confirm Password'\n                        required\n                    />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}